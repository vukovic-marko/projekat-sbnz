package sbnz.integracija

import sbnz.integracija.example.facts.Zapisnik;
import sbnz.integracija.example.facts.Kazna;
import sbnz.integracija.example.facts.KaznaVoznjaPodUticajem;
import sbnz.integracija.example.facts.KaznaPrekoracenjaBrzine;
import sbnz.integracija.example.facts.Vozac;

import java.util.List
import java.util.ArrayList
import java.lang.Integer
import java.util.Arrays
import java.lang.Double;

rule "dodeljivanje 2 kaznena poena za izazivanje saobracajne nesrece prilikom prekoracenja brzine ako kaznom oni nisu dodeljeni"
salience -20
    when
        $z: Zapisnik( $voznja: prekoracenjeBrzine, saobracajnaNesreca == true )
        $v: KaznaPrekoracenjaBrzine( this == $voznja, kazneniPoeni == null )
    then
        modify($v){ setKazneniPoeni(2) }
end

rule "dodeljivanje 2 kaznena poena za izazivanje saobracajne nesrece prilikom voznje pod uticajem ako kaznom oni nisu dodeljeni"
salience -20
    when
        $z: Zapisnik( $voznja: voznjaPodUticajem, saobracajnaNesreca == true )
        $v: KaznaVoznjaPodUticajem( this == $voznja, kazneniPoeni == null )
    then
        modify($v){ setKazneniPoeni(2) }
end

rule "uvecanje kaznenih poena prilikom prekoracenja brzine kada je u vozilu prisutno dete mladje od 12 godina"
//no-loop true // TODO - proveri
salience -21
    when
        $z: Zapisnik( $voznja: prekoracenjeBrzine, prisutnoDete == true )
        $v: KaznaPrekoracenjaBrzine( this == $voznja, dete1 != true )
    then
        Integer kazneniPoeni = $v.getKazneniPoeni();

        if (kazneniPoeni != null) {
            modify($v){ setKazneniPoeni(kazneniPoeni + 2), setDete1(true) }
        } else {
            modify($v){ setKazneniPoeni(2), setDete1(true) }
        }
end

rule "uvecanje kaznenih poena prilikom voznje pod uticajem kada je u vozilu prisutno dete mladje od 12 godina"
//no-loop true // TODO - proveri
salience -21
    when
        $z: Zapisnik( $voznja: voznjaPodUticajem, prisutnoDete == true )
        $v: KaznaVoznjaPodUticajem( this == $voznja, dete1 != true )
    then
        Integer kazneniPoeni = $v.getKazneniPoeni();

        if (kazneniPoeni != null) {
            modify($v){ setKazneniPoeni(kazneniPoeni + 2), setDete1(true) }
        } else {
            modify($v){ setKazneniPoeni(2), setDete1(true) }
        }
end

rule "uvecanje zabrane upravljanja prilikom prekoracenja brzine kada je u vozilu prisutno dete"
//no-loop true
salience -22
    when
        $z: Zapisnik( $voznja: prekoracenjeBrzine, prisutnoDete == true )
        $v: KaznaPrekoracenjaBrzine( this == $voznja, zabranaUpravljanja != null, dete2 != true )
    then
        Integer zabrana = $v.getZabranaUpravljanja();
        modify($v){ setZabranaUpravljanja(zabrana + 2), setDete2(true) }
end

rule "izbor vece kazne za ometanje ovlascenog lica prilikom utvrdjivanja stepena alkoholisanosti"
salience -23
    when
        $z: Zapisnik( $voznja: voznjaPodUticajem, ometa == true )
        $v: KaznaVoznjaPodUticajem( this == $voznja, novcanaKazna != null, $n: novcanaKazna, novcanaKazna.size() == 2 )
    then
        Double d = (Double) $n.get(1);
        modify($v){ setNovcanaKazna(new Double[] {d}) }
end